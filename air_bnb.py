# -*- coding: utf-8 -*-
"""AIR_BNB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zrY3zxZb_YmDtDEee61rQQf0B5IC-ztn
"""

!pip install numpy pandas matplotlib seaborn plotly

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

df=pd.read_excel('/content/Airbnb_Open_Data.xlsx')

df.head()

df.info()

df.duplicated().value_counts()

df.drop_duplicates(inplace = True)

df[df['neighbourhood group']=='brookln']

df.drop(['house_rules','license'],axis=1,inplace=True)

df['price'] = df['price'].astype(str).str.replace('$', '', regex=False)
df['service fee'] = df['service fee'].astype(str).str.replace('$', '', regex=False)

# Convert columns to numeric, coercing errors
#df['price'] = pd.to_numeric(df['price'], errors='coerce')
#df['service fee'] = pd.to_numeric(df['service fee'], errors='coerce')

df['price'] = df['price'].astype(str).str.replace(',', '', regex=False)
df['service fee'] = df['service fee'].astype(str).str.replace(',', '', regex=False)

df.rename(columns={'price':'price_$','service fee':'service fee_$'},inplace=True)

df.dropna(inplace=True)

df['price_$']=df['price_$'].astype(float)
df['service fee_$']=df['service fee_$'].astype(float)
df['id']=df['id'].astype(str)
df['host id']=df['host id'].astype(str)
df['last review']=pd.to_datetime(df['last review'])
df['Construction year']=df['Construction year'].astype(int)

df.loc[df['neighbourhood group']=='brookln','neighbourhood group']='Brooklyn'

df=df.drop(df[df['availability 365']>500].index)

df.duplicated().value_counts()

df.info()

df.describe()

property_types=df['room type'].value_counts().to_frame()
property_types

room_type_bar=plt.bar(property_types.index,property_types.loc[:,'count']);
plt.bar_label(room_type_bar,labels=property_types.loc[:,'count'],padding=4)
plt.ylim(0,50000)
plt.xlabel('Room Type')
plt.ylabel('Room type Count')
plt.title('Property Types and thier count in the dataset')

hood_group=df['neighbourhood group'].value_counts().to_frame()
hood_group

hood_group_bar=plt.bar(hood_group.index,hood_group.loc[:,'count']);
plt.bar_label(hood_group_bar,labels=hood_group.loc[:,'count'],padding=4)
plt.ylim(0,40000)
plt.xlabel('Neighbourhood Group')
plt.ylabel('Number of Listings')
plt.xticks(rotation=45)
plt.title('Which Neighbourhood Group has the highest number of Listing')

